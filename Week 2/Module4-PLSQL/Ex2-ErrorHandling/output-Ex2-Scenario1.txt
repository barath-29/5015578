SQL> 
SQL> VARIABLE input VARCHAR2(30)
SQL> 
SQL> -- Insert sample customers
SQL> INSERT INTO CUSTOMERS (CustomerID, Name, DOB, Balance, LastModified)
  2  VALUES (1001, 'John Doe', TO_DATE('1950-01-01', 'YYYY-MM-DD'), 5000, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO CUSTOMERS (CustomerID, Name, DOB, Balance, LastModified)
  2  VALUES (1002, 'Jane Smith', TO_DATE('1955-01-01', 'YYYY-MM-DD'), 6000, SYSDATE);

1 row created.

SQL> 
SQL> -- Insert sample accounts with balances
SQL> INSERT INTO ACCOUNTS (AccountID, CustomerID, AccountType, Balance, LastModified)
  2  VALUES (3001, 1001, 'Checking', 5000, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO ACCOUNTS (AccountID, CustomerID, AccountType, Balance, LastModified)
  2  VALUES (3002, 1002, 'Savings', 1000, SYSDATE);

1 row created.

SQL> 
SQL> -- Procedure for safe fund transfer
SQL> CREATE OR REPLACE PROCEDURE SafeTransferFunds (
  2  	 p_from_account_id IN NUMBER,
  3  	 p_to_account_id IN NUMBER,
  4  	 p_amount IN NUMBER
  5  ) IS
  6  	 insufficient_funds EXCEPTION;
  7  	 v_balance NUMBER;
  8  BEGIN
  9  	 SELECT Balance INTO v_balance FROM Accounts WHERE AccountID = p_from_account_id;
 10  
 11  	 IF v_balance < p_amount THEN
 12  	     RAISE insufficient_funds;
 13  	 ELSE
 14  	     UPDATE Accounts SET Balance = Balance - p_amount WHERE AccountID = p_from_account_id;
 15  	     UPDATE Accounts SET Balance = Balance + p_amount WHERE AccountID = p_to_account_id;
 16  	     DBMS_OUTPUT.PUT_LINE('Fund Transfer Successful');
 17  	     COMMIT;
 18  	 END IF;
 19  
 20  EXCEPTION
 21  	 WHEN insufficient_funds THEN
 22  	     DBMS_OUTPUT.PUT_LINE('Error: Insufficient funds in the source account.');
 23  	     ROLLBACK;
 24  	 WHEN OTHERS THEN
 25  	     DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
 26  	     ROLLBACK;
 27  END SafeTransferFunds;
 28  /

Procedure created.

SQL> 
SQL> -- Test the procedure
SQL> BEGIN
  2  	 SafeTransferFunds(3001, 3002, 1000); -- This should be successful
  3  	 SafeTransferFunds(3001, 3002, 6000); -- This should cause insufficient funds error
  4  END;
  5  /
Fund Transfer Successful                                                        
Error: Insufficient funds in the source account.                                

PL/SQL procedure successfully completed.

SQL> 
SQL> SPOOL OFF
